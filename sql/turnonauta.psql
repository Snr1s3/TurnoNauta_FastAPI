-- Connect to the default postgres database
\c postgres;

-- Drop Database if it exists
DROP DATABASE IF EXISTS turnonauta;

-- Create Database
CREATE DATABASE turnonauta;

-- Connect to the newly created database
\c turnonauta;

-- Create Roles
DO $$
BEGIN
    IF NOT EXISTS (SELECT 1 FROM pg_roles WHERE rolname = 'turnonauta') THEN
        CREATE ROLE turnonauta;
        ALTER ROLE turnonauta WITH SUPERUSER INHERIT NOCREATEROLE CREATEDB LOGIN NOREPLICATION NOBYPASSRLS PASSWORD 'your_secure_password';
    END IF;
END
$$;

-- Grant Role Memberships
GRANT pg_read_all_data TO turnonauta;
GRANT pg_read_all_settings TO turnonauta;
GRANT pg_read_all_stats TO turnonauta;

-- Create Sequences
CREATE SEQUENCE public.emparallaments_id_emperallent_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE public.estadistiques_id_estats_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE public.format_id_format_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE public.puntuacio_id_puntuacio_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE public.rang_id_rang_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE public.resultat_id_resultat_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE public.rol_id_rol_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE public.ronda_id_ronda_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE public.subscripcio_id_subscripcio_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE public.torneig_id_torneig_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;
CREATE SEQUENCE public.usuaris_id_usuaris_seq AS integer START WITH 1 INCREMENT BY 1 NO MINVALUE NO MAXVALUE CACHE 1;

-- Create Tables
CREATE TABLE public.emparallaments (
    id_emperallent integer NOT NULL DEFAULT nextval('public.emparallaments_id_emperallent_seq'),
    id_ronda integer,
    id_usuari1 integer,
    resultat_usuari_1 integer,
    id_usuari2 integer,
    resultat_usuari_2 integer,
    id_usuari_guanyador integer,
    id_usuari_perdedor integer,
    PRIMARY KEY (id_emperallent)
);

CREATE TABLE public.estadistiques (
    id_estats integer NOT NULL DEFAULT nextval('public.estadistiques_id_estats_seq'),
    id_usuari integer,
    partides_jugades integer,
    partides_guanyades integer,
    tornejos_jugats integer,
    tornejos_guanyats integer,
    PRIMARY KEY (id_estats)
);

CREATE TABLE public.format (
    id_format integer NOT NULL DEFAULT nextval('public.format_id_format_seq'),
    nom character varying(50),
    joc character varying(50),
    jugadors integer,
    temps time without time zone,
    regles text,
    PRIMARY KEY (id_format)
);

CREATE TABLE public.puntuacio (
    id_puntuacio integer NOT NULL DEFAULT nextval('public.puntuacio_id_puntuacio_seq'),
    id_torneig integer,
    id_usuari integer,
    sos integer,
    victories integer,
    empat integer,
    derrotes integer,
    punts integer,
    PRIMARY KEY (id_puntuacio)
);

CREATE TABLE public.rang (
    id_rang integer NOT NULL DEFAULT nextval('public.rang_id_rang_seq'),
    nom character varying(50),
    descripcio text,
    PRIMARY KEY (id_rang)
);

CREATE TABLE public.resultat (
    id_resultat integer NOT NULL DEFAULT nextval('public.resultat_id_resultat_seq'),
    id_ronda integer,
    id_usuari_guanyador integer,
    PRIMARY KEY (id_resultat)
);

CREATE TABLE public.rol (
    id_rol integer NOT NULL DEFAULT nextval('public.rol_id_rol_seq'),
    nom character varying(50),
    permet_torneig boolean,
    PRIMARY KEY (id_rol)
);

CREATE TABLE public.ronda (
    id_ronda integer NOT NULL DEFAULT nextval('public.ronda_id_ronda_seq'),
    id_torneig integer,
    estat character varying(50),
    id_emparallent integer,
    PRIMARY KEY (id_ronda)
);

CREATE TABLE public.subscripcio (
    id_subscripcio integer NOT NULL DEFAULT nextval('public.subscripcio_id_subscripcio_seq'),
    id_usuari integer,
    data_inici date,
    data_final date,
    tipus character varying(50),
    estat character varying(50),
    PRIMARY KEY (id_subscripcio)
);

CREATE TABLE public.torneig (
    id_torneig integer NOT NULL DEFAULT nextval('public.torneig_id_torneig_seq'),
    nom character varying(100) UNIQUE,
    joc character varying(50),
    usuari_organitzador integer,
    competitiu boolean,
    virtual boolean,
    format character varying(50),
    num_jugadors integer,
    premi character varying(100),
    data_d_inici date,
    data_final date,
    PRIMARY KEY (id_torneig)
);

CREATE TABLE public.usuaris (
    id_usuaris integer NOT NULL DEFAULT nextval('public.usuaris_id_usuaris_seq'),
    rol integer,
    username character varying(50) UNIQUE,
    email character varying(100),
    bio text,
    telefono character varying(15),
    contrasenya character varying(100),
    rang integer,
    data_de_registre date,
    PRIMARY KEY (id_usuaris)
);

-- Add Foreign Key Constraints
ALTER TABLE public.emparallaments ADD CONSTRAINT emparallaments_id_usuari1_fkey FOREIGN KEY (id_usuari1) REFERENCES public.usuaris(id_usuaris);
ALTER TABLE public.emparallaments ADD CONSTRAINT emparallaments_id_usuari2_fkey FOREIGN KEY (id_usuari2) REFERENCES public.usuaris(id_usuaris);
ALTER TABLE public.puntuacio ADD CONSTRAINT puntuacio_id_torneig_fkey FOREIGN KEY (id_torneig) REFERENCES public.torneig(id_torneig);
ALTER TABLE public.puntuacio ADD CONSTRAINT puntuacio_id_usuari_fkey FOREIGN KEY (id_usuari) REFERENCES public.usuaris(id_usuaris);
ALTER TABLE public.ronda ADD CONSTRAINT ronda_id_torneig_fkey FOREIGN KEY (id_torneig) REFERENCES public.torneig(id_torneig);
ALTER TABLE public.torneig ADD CONSTRAINT torneig_usuari_organitzador_fkey FOREIGN KEY (usuari_organitzador) REFERENCES public.usuaris(id_usuaris);
ALTER TABLE public.ronda ADD CONSTRAINT ronda_id_emparallent_fkey FOREIGN KEY (id_emparallent) REFERENCES public.emparallaments(id_emperallent)
-- Grant Permissions
GRANT ALL ON DATABASE turnonauta TO turnonauta;
GRANT ALL ON ALL TABLES IN SCHEMA public TO turnonauta;
GRANT ALL ON ALL SEQUENCES IN SCHEMA public TO turnonauta;

-- Reset Sequences
SELECT setval('emparallaments_id_emperallent_seq', COALESCE((SELECT MAX(id_emperallent) FROM public.emparallaments), 0) + 1, false);
SELECT setval('estadistiques_id_estats_seq', COALESCE((SELECT MAX(id_estats) FROM public.estadistiques), 0) + 1, false);
SELECT setval('format_id_format_seq', COALESCE((SELECT MAX(id_format) FROM public.format), 0) + 1, false);
SELECT setval('puntuacio_id_puntuacio_seq', COALESCE((SELECT MAX(id_puntuacio) FROM public.puntuacio), 0) + 1, false);
SELECT setval('rang_id_rang_seq', COALESCE((SELECT MAX(id_rang) FROM public.rang), 0) + 1, false);
SELECT setval('resultat_id_resultat_seq', COALESCE((SELECT MAX(id_resultat) FROM public.resultat), 0) + 1, false);
SELECT setval('rol_id_rol_seq', COALESCE((SELECT MAX(id_rol) FROM public.rol), 0) + 1, false);
SELECT setval('ronda_id_ronda_seq', COALESCE((SELECT MAX(id_ronda) FROM public.ronda), 0) + 1, false);
SELECT setval('subscripcio_id_subscripcio_seq', COALESCE((SELECT MAX(id_subscripcio) FROM public.subscripcio), 0) + 1, false);
SELECT setval('torneig_id_torneig_seq', COALESCE((SELECT MAX(id_torneig) FROM public.torneig), 0) + 1, false);
SELECT setval('usuaris_id_usuaris_seq', COALESCE((SELECT MAX(id_usuaris) FROM public.usuaris), 0) + 1, false);